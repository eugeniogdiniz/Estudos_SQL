-- * ---------------------------------------------------------------------------------------------------------------- * -- 
-- * AC04 - LINGUAGEM SQL	 - [JUNÇÕES]  * --
-- *																												  * --
-- NOME : EUGÊNIO LENINE GUEIROS DINIZ

-- * OBJETIVO DA ATIVIDADE: FIXAR OS CONTEÚDOS SOBRE JUNÇÕES, APLICANDO CONCEITOS UTILIZADOS EM SALA DE AULA          * --
-- * ---------------------------------------------------------------------------------------------------------------- * -- 


USE PEDIDOS
-- 01. BUSCAR OS NOMES DE EMPREGADOS, COM NOMES DE CARGOS, O SALARIO ATUAL E O SALARIO INICIAL 
-- E A DIFERENCA ENTRE O SALARIO ATUAL E O SALARIO INICIAL - SUBTRAIR UM DO OUTRO (VALOR: 1,5 PONTO)

SELECT te.nome AS 'NOMES',
tc.cargo AS 'CARGO', 
Te.salario AS 'SALARIO ATUAL', 
tc.salario_inic AS 'SALARIO INICIAL', 
te.salario - tc.salario_inic as 'DIFERENÇA'
FROM TB_EMPREGADO AS TE, TB_CARGO AS TC;


-- 02. TRAZER O NOME DE TODOS OS COLABORADORES, INDEPENDENTEMENTE DE TEREM OU NÃO DEPENDENTES. 
-- PARA OS QUE TIVEREM DEPENDENTES, TRAZER O NOME DOS DEPENDENTES TAMBÉM, PARA OS QUE NÃO TIVEREM, 
-- TRATAR O CAMPO (NOME) COM A INFORMAÇÃO "NÃO POSSUI DEPENDENTES" (VALOR: 1,5 PONTO)

SELECT TE.NOME AS 'FUNCIONARIO',
CASE
    WHEN TE.NUM_DEPEND <> 0 THEN TD.NOME
    ELSE 'NÃO POSSUI DEPENDENTES'
END AS DEPENDENTE
FROM TB_EMPREGADO AS TE
FULL JOIN TB_DEPENDENTE AS TD
ON TE.CODFUN = TD.CODFUN;

-- 03. TRAZER O CÓDIGO DO EMPREGADO, O NOME DO EMPREGADO E O CÓDIGO E NOME DO SEU SUPERVISOR. 
-- PARA EMPREGADOS QUE NÃO POSSUÍREM SUPERVISOR, INFORMAR "NÃO FOI ENCONTRADO SUPERIOR" NO CAMPO NOME (VALOR: 1,5 PONTO)
SELECT * FROM TB_EMPREGADO AS TE WHERE TE.COD_SUPERVISOR IN (1,15);
SELECT * FROM TB_CARGO AS TC;

SELECT TE.CODFUN AS 'CÓDIGO DO EMPREGADO', 
TE.NOME AS 'NOME DO EMPREGADO',
TE.COD_SUPERVISOR AS 'COD SUPERVISOR',
CASE
    WHEN TE.COD_SUPERVISOR IN (1, 15) THEN TE.NOME
    ELSE 'NÃO FOI ENCONTRADO SUPERIOR'
END AS SUPERVISOR
FROM TB_EMPREGADO AS TE
FULL JOIN TB_CARGO AS TC
ON TE.COD_CARGO = TC.COD_CARGO;


-- 04. 
-- A. LISTE OS CAMPOS NUM_PEDIDO, DATA_EMISSAO e VLR_TOTAL de PEDIDOS, SEGUIDOS DO NOME DO VENDEDOR
-- B. LISTE OS CAMPOS NUM_PEDIDO, DATA_EMISSAO e VLR_TOTAL de PEDIDOS, SEGUIDOS DO NOME DO CLIENTE
-- C. UNIFIQUE AS DUAS CONSULTAS ANTERIORES, OU SEJA: LISTE OS CAMPOS NUM_PEDIDO, DATA_EMISSAO e VLR_TOTAL de PEDIDOS, 
--    SEGUIDOS DO NOME DO CLIENTE E DO NOME DO VENDEDOR (VALOR: 2,0 PONTOS)

SELECT * FROM TB_PEDIDO;
SELECT * FROM TB_VENDEDOR;

SELECT TP.NUM_PEDIDO AS 'NUMERO DO PEDIDO', 
TP.DATA_EMISSAO AS 'DATA DE EMISSAO', 
TP.VLR_TOTAL AS 'TOTAL DE VENDAS', 
TV.NOME AS 'NOME DO VENDEDOR'
FROM TB_PEDIDO AS TP
JOIN TB_VENDEDOR AS TV
ON TP.CODVEN = TV.CODVEN;

SELECT TP.NUM_PEDIDO AS 'NUMERO DO PEDIDO', 
TP.DATA_EMISSAO AS 'DATA DE EMISSAO', 
TP.VLR_TOTAL AS 'TOTAL DE VENDAS', 
TC.NOME AS 'NOME DO CLIENTE'
FROM TB_PEDIDO AS TP
JOIN TB_CLIENTE AS TC
ON TP.CODCLI = TC.CODCLI;

SELECT TP.NUM_PEDIDO AS 'NUMERO DO PEDIDO', 
TP.DATA_EMISSAO AS 'DATA DE EMISSAO', 
TP.VLR_TOTAL AS 'TOTAL DE VENDAS', 
TC.NOME AS 'NOME DO CLIENTE',
TV.NOME AS 'NOME DO VENDEDOR'
FROM TB_PEDIDO AS TP
JOIN TB_CLIENTE AS TC
ON TP.CODCLI = TC.CODCLI
JOIN TB_VENDEDOR AS TV
ON TP.CODVEN = TV.CODVEN;

-- 05. SELECIONAR EM UMA MESMA CONSULTA, OS CARGOS EM QUE NÃO ESTÁ ALOCADO NENHUM FUNCIONÁRIO E OS FUNCIONÁRIOS QUE NÃO
-- ESTÃO ALOCADOS EM NENHUM CARGO (VALOR: 1,5 PONTO)

SELECT * FROM TB_EMPREGADO;
SELECT * FROM TB_CARGO;

SELECT  TE.NOME, TE.COD_CARGO, TC.COD_CARGO, TC.CARGO
FROM TB_EMPREGADO AS TE
FULL JOIN TB_CARGO AS TC
ON TE.COD_CARGO = TC.COD_CARGO
WHERE TE.COD_CARGO IS NULL;


-- 06. SELECIONAR TODOS OS PEDIDOS (TABELA TB_PEDIDO) COM SEUS RESPECTIVOS ITENS DE PEDIDO E QUANTIDADES (TABELA TB_ITENSPEDIDO), 
-- BEM COMO O CÓDIGO E DESCRIÇÃO DOS PRODUTOS ASSOCIADOS (TB_PRODUTO)
-- FILTRAR APENAS POR PRODUTOS BRANCOS OU LARANJA (TABELA TB_COR) E COM DATA DE EMISSÃO (TABELA TB_PEDIDO) ENTRE 2012 E 2013 (VALOR: 2,0 PONTO)

SELECT * FROM TB_PEDIDO AS TP
SELECT * FROM TB_ITENSPEDIDO AS TI
SELECT * FROM TB_PRODUTO AS TPROD
SELECT * FROM TB_COR AS TCOR

SELECT	TP.NUM_PEDIDO, TP.OBSERVACOES, TP.DATA_EMISSAO,		-- TABELA PEDIDO
		TI.NUM_ITEM, TI.QUANTIDADE,							-- TABELA INTENS PEDIDO	
		TPROD.COD_PRODUTO, TPROD.DESCRICAO,					-- TABELA PRODUTO
		TC.COR												-- TABELA COR
FROM TB_PEDIDO AS TP
FULL JOIN TB_ITENSPEDIDO AS TI
ON TP.NUM_PEDIDO = TI.NUM_PEDIDO
FULL JOIN TB_PRODUTO AS TPROD
ON TPROD.COD_PRODUTO = TI.COD_PRODUTO
FULL JOIN TB_COR AS TC
ON TI.CODCOR = TC.CODCOR
WHERE	(TC.COR LIKE 'BRANCO'  
OR		TC.COR LIKE 'LARANJA')
AND		YEAR (TP.DATA_EMISSAO) >= 2012 
AND		YEAR (TP.DATA_EMISSAO) <= 2013;